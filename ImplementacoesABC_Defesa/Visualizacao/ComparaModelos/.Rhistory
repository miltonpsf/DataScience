# nVertices <- 1750
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCBeaumont1750  <- dadosResultadoABC
# save(dadosResultadoABCBeaumont1750, file="dadosResultadoABCBeaumont1750.RData")
#
# amostraABCBeaumont1750 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCBeaumont1750, file="amostraABCBeaumont1750.RData")
#
# nVertices <- 2000
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCBeaumont2000  <- dadosResultadoABC
# save(dadosResultadoABCBeaumont2000, file="dadosResultadoABCBeaumont2000.RData")
#
# amostraABCBeaumont2000 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCBeaumont2000, file="amostraABCBeaumont2000.RData")
#
# nVertices <- 2250
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCBeaumont2250  <- dadosResultadoABC
# save(dadosResultadoABCBeaumont2250, file="dadosResultadoABCBeaumont2250.RData")
#
# amostraABCBeaumont2250 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCBeaumont2250, file="amostraABCBeaumont2250.RData")
#
#
# modelo <- "Lenormand"
# nVertices <- 50
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand50  <- dadosResultadoABC
# save(dadosResultadoABCLenormand50, file="dadosResultadoABCLenormand50.RData")
#
# amostraABCLenormand50 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand50, file="amostraABCLenormand50.RData")
#
# nVertices <- 100
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand100  <- dadosResultadoABC
# save(dadosResultadoABCLenormand100, file="dadosResultadoABCLenormand100.RData")
#
# amostraABCLenormand100 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand100, file="amostraABCLenormand100.RData")
#
# nVertices <- 200
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand200  <- dadosResultadoABC
# save(dadosResultadoABCLenormand200, file="dadosResultadoABCLenormand200.RData")
#
# amostraABCLenormand200 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand200, file="amostraABCLenormand200.RData")
#
# nVertices <- 500
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand500  <- dadosResultadoABC
# save(dadosResultadoABCLenormand500, file="dadosResultadoABCLenormand500.RData")
#
# amostraABCLenormand500 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand500, file="amostraABCLenormand500.RData")
#
# nVertices <- 750
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand750  <- dadosResultadoABC
# save(dadosResultadoABCLenormand750, file="dadosResultadoABCLenormand750.RData")
#
# amostraABCLenormand750 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand750, file="amostraABCLenormand750.RData")
#
# nVertices <- 1000
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand1000  <- dadosResultadoABC
# save(dadosResultadoABCLenormand1000, file="dadosResultadoABCLenormand1000.RData")
#
# amostraABCLenormand1000 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand1000, file="amostraABCLenormand1000.RData")
#
# nVertices <- 1250
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand1250  <- dadosResultadoABC
# save(dadosResultadoABCLenormand1250, file="dadosResultadoABCLenormand1250.RData")
#
# amostraABCLenormand1250 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand1250, file="amostraABCLenormand1250.RData")
#
# nVertices <- 1500
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand1500  <- dadosResultadoABC
# save(dadosResultadoABCLenormand1500, file="dadosResultadoABCLenormand1500.RData")
#
# amostraABCLenormand1500 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand1500, file="amostraABCLenormand1500.RData")
#
# nVertices <- 1750
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand1750  <- dadosResultadoABC
# save(dadosResultadoABCLenormand1750, file="dadosResultadoABCLenormand1750.RData")
#
# amostraABCLenormand1750 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand1750, file="amostraABCLenormand1750.RData")
#
# nVertices <- 2000
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand2000  <- dadosResultadoABC
# save(dadosResultadoABCLenormand2000, file="dadosResultadoABCLenormand2000.RData")
#
# amostraABCLenormand2000 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand2000, file="amostraABCLenormand2000.RData")
#
# nVertices <- 2250
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCLenormand2250  <- dadosResultadoABC
# save(dadosResultadoABCLenormand2250, file="dadosResultadoABCLenormand2250.RData")
#
# amostraABCLenormand2250 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCLenormand2250, file="amostraABCLenormand2250.RData")
#
# modelo <- "Drovandi"
# nVertices <- 50
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi50  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi50, file="dadosResultadoABCDrovandi50.RData")
#
# amostraABCDrovandi50 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi50, file="amostraABCDrovandi50.RData")
#
# nVertices <- 100
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi100  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi100, file="dadosResultadoABCDrovandi100.RData")
#
# amostraABCDrovandi100 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi100, file="amostraABCDrovandi100.RData")
#
# nVertices <- 200
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi200  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi200, file="dadosResultadoABCDrovandi200.RData")
#
# amostraABCDrovandi200 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi200, file="amostraABCDrovandi200.RData")
#
# nVertices <- 500
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi500  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi500, file="dadosResultadoABCDrovandi500.RData")
#
# amostraABCDrovandi500 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi500, file="amostraABCDrovandi500.RData")
#
# nVertices <- 750
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi750  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi750, file="dadosResultadoABCDrovandi750.RData")
#
# amostraABCDrovandi750 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi750, file="amostraABCDrovandi750.RData")
#
# nVertices <- 1000
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi1000  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi1000, file="dadosResultadoABCDrovandi1000.RData")
#
# amostraABCDrovandi1000 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi1000, file="amostraABCDrovandi1000.RData")
#
# nVertices <- 1250
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi1250  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi1250, file="dadosResultadoABCDrovandi1250.RData")
#
# amostraABCDrovandi1250 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi1250, file="amostraABCDrovandi1250.RData")
#
# nVertices <- 1500
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi1500  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi1500, file="dadosResultadoABCDrovandi1500.RData")
#
# amostraABCDrovandi1500 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi1500, file="amostraABCDrovandi1500.RData")
#
# nVertices <- 1750
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi1750  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi1750, file="dadosResultadoABCDrovandi1750.RData")
#
# amostraABCDrovandi1750 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi1750, file="amostraABCDrovandi1750.RData")
#
# nVertices <- 2000
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi2000  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi2000, file="dadosResultadoABCDrovandi2000.RData")
#
# amostraABCDrovandi2000 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi2000, file="amostraABCDrovandi2000.RData")
#
# nVertices <- 2250
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCDrovandi2250  <- dadosResultadoABC
# save(dadosResultadoABCDrovandi2250, file="dadosResultadoABCDrovandi2250.RData")
#
# amostraABCDrovandi2250 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCDrovandi2250, file="amostraABCDrovandi2250.RData")
#
# modelo <- "Rejeicao"
# nVertices <- 50
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCRejeicao50  <- dadosResultadoABC
# save(dadosResultadoABCRejeicao50, file="dadosResultadoABCRejeicao50.RData")
#
# amostraABCRejeicao50 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCRejeicao50, file="amostraABCRejeicao50.RData")
#
# nVertices <- 100
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCRejeicao100  <- dadosResultadoABC
# save(dadosResultadoABCRejeicao100, file="dadosResultadoABCRejeicao100.RData")
#
# amostraABCRejeicao100 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCRejeicao100, file="amostraABCRejeicao100.RData")
#
# nVertices <- 200
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCRejeicao200  <- dadosResultadoABC
# save(dadosResultadoABCRejeicao200, file="dadosResultadoABCRejeicao200.RData")
#
# amostraABCRejeicao200 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCRejeicao200, file="amostraABCRejeicao200.RData")
#
# nVertices <- 500
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCRejeicao500  <- dadosResultadoABC
# save(dadosResultadoABCRejeicao500, file="dadosResultadoABCRejeicao500.RData")
#
# amostraABCRejeicao500 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCRejeicao500, file="amostraABCRejeicao500.RData")
#
# nVertices <- 750
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCRejeicao750  <- dadosResultadoABC
# save(dadosResultadoABCRejeicao750, file="dadosResultadoABCRejeicao750.RData")
#
# amostraABCRejeicao750 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCRejeicao750, file="amostraABCRejeicao750.RData")
#
# nVertices <- 1000
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCRejeicao1000  <- dadosResultadoABC
# save(dadosResultadoABCRejeicao1000, file="dadosResultadoABCRejeicao1000.RData")
#
# amostraABCRejeicao1000 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCRejeicao1000, file="amostraABCRejeicao1000.RData")
#
# nVertices <- 1250
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCRejeicao1250  <- dadosResultadoABC
# save(dadosResultadoABCRejeicao1250, file="dadosResultadoABCRejeicao1250.RData")
#
# amostraABCRejeicao1250 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCRejeicao1250, file="amostraABCRejeicao1250.RData")
#
# modelo <- "Marjoram"
# nVertices <- 50
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCMarjoram50  <- dadosResultadoABC
# save(dadosResultadoABCMarjoram50, file="dadosResultadoABCMarjoram50.RData")
#
# amostraABCMarjoram50 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCMarjoram50, file="amostraABCMarjoram50.RData")
#
# nVertices <- 100
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCMarjoram100  <- dadosResultadoABC
# save(dadosResultadoABCMarjoram100, file="dadosResultadoABCMarjoram100.RData")
#
# amostraABCMarjoram100 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCMarjoram100, file="amostraABCMarjoram100.RData")
#
# nVertices <- 200
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCMarjoram200  <- dadosResultadoABC
# save(dadosResultadoABCMarjoram200, file="dadosResultadoABCMarjoram200.RData")
#
# amostraABCMarjoram200 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCMarjoram200, file="amostraABCMarjoram200.RData")
#
# nVertices <- 500
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCMarjoram500  <- dadosResultadoABC
# save(dadosResultadoABCMarjoram500, file="dadosResultadoABCMarjoram500.RData")
#
# amostraABCMarjoram500 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCMarjoram500, file="amostraABCMarjoram500.RData")
#
# nVertices <- 750
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCMarjoram750  <- dadosResultadoABC
# save(dadosResultadoABCMarjoram750, file="dadosResultadoABCMarjoram750.RData")
#
# amostraABCMarjoram750 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCMarjoram750, file="amostraABCMarjoram750.RData")
#
# nVertices <- 1000
# dadosResultadoABC  <- subset(dadosResultado, NO_MODELO ==modelo & NU_VERTICES == nVertices)
# dadosResultadoABC  <- subset(dadosResultadoABC, DT_PROCESSAMENTO == max(DT_PROCESSAMENTO))
# dadosResultadoABCMarjoram1000  <- dadosResultadoABC
# save(dadosResultadoABCMarjoram1000, file="dadosResultadoABCMarjoram1000.RData")
#
# amostraABCMarjoram1000 <- RetornaAmostraAlgoritmos(conexao, modelo, dadosResultadoABC$DT_PROCESSAMENTO)
# save(amostraABCMarjoram1000, file="amostraABCMarjoram1000.RData")
#write.csv(dadosResultado,"dadosResultado.csv")
retornaDadosResutadoPorV <- function (dadosResultado, pNumVertice, pIntervaloConfKL, pIntervaloConfKS, pIntervaloConfChi2) {
dadosResultadoPorV <- subset(dadosResultado, NU_VERTICES == pNumVertice)
#  dadosResultadoPorV  <- dadosResultadoPorV[,-c(1,2,4,5,7,9,10,16,17,18)]
dadosResultadoPorV  <- dadosResultadoPorV[,-c(1,2,4,5,7,9,10,14,16,17,18)]
#  names(dadosResultadoPorV)  <- c("Modelo","Media posteriori","Vertice","KL","KS","KS-pvalue","ChiQ","ESS")
names(dadosResultadoPorV)  <- c("Modelo","Media posteriori","Vertice","KL","KS","KS-pvalue","ESS")
#  dadosResultadoPorV <- dadosResultadoPorV[c("Vertice","Modelo","Media posteriori","KL","KS","KS-pvalue","ChiQ","ESS")]
dadosResultadoPorV <- dadosResultadoPorV[c("Vertice","Modelo","Media posteriori","KL","KS","KS-pvalue","ESS")]
intervaloConfKLPorV <- subset(pIntervaloConfKL, NU_VERTICES == pNumVertice)
intervaloConfKSPorV <- subset(pIntervaloConfKS, NU_VERTICES == pNumVertice)
intervaloConfChiPorV <- subset(pIntervaloConfChi2, NU_VERTICES == pNumVertice)
intervaloConfKLPorV <- intervaloConfKLPorV[,-1]
intervaloConfKSPorV <- intervaloConfKSPorV[,-1]
#  intervaloConfChiPorV <- intervaloConfChiPorV[,-1]
intervaloConfPValuePorV <- as.data.frame(t(c(0.05,0.1)))
names(intervaloConfPValuePorV) <- c("PV95","PV99")
#  dadosResultadoPorV <- cbind(dadosResultadoPorV,intervaloConfKLPorV,intervaloConfKSPorV,intervaloConfChiPorV,intervaloConfPValuePorV)
dadosResultadoPorV <- cbind(dadosResultadoPorV,intervaloConfKLPorV,intervaloConfKSPorV,intervaloConfPValuePorV)
attach(dadosResultadoPorV)
dadosResultadoPorV <- dadosResultadoPorV[order(Modelo),]
return(dadosResultadoPorV)
}
dadosResultado50   <- retornaDadosResutadoPorV(dadosResultado,50,intervaloConfKL, intervaloConfKS, intervaloConfChi2)
View(dadosResultado50)
runApp('Visualizacao/ComparaModelos')
runApp('Visualizacao/ComparaModelos')
runApp('Visualizacao/ComparaModelos')
runApp('Visualizacao/ComparaModelos')
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
?Lognormal
plot(density(rlnorm(1000,-log(4)/2,log(4))))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
plot(density(rlnorm(1000,-log(4)/2,log(4))))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
mean(rlnorm(1000,-log(4)/2,log(4)))
a <- c(rep(0,1000))
a
for (i in 1:1000) {}
for (i in 1:1000) {
a[i] <- mean(rlnorm(1000,-log(4)/2,log(4)))
}
a
mean(a)
sd(a)
a[i] <- mean(rlnorm(1000,meanlog=-log(4)/2,sd=sqrt(log(4))))
for (i in 1:1000) {
a[i] <- mean(rlnorm(1000,meanlog=-log(4)/2,sd=sqrt(log(4))))
}
sd(a)
var(a)
mean(a)
mean(a)
var(a)
for (i in 1:1000) {
a[i] <- mean(rlnorm(1,meanlog=-log(4)/2,sd=sqrt(log(4))))
}
var(a)
mean(a)
plot(a)
hist(a)
hist(a,breaks = 10)
hist(a,breaks = 100)
hist(a,breaks = 50)
hist(a,breaks = 50)
hist(a,breaks = 25)
hist(a,breaks = 25,freq = FALSE)
shiny::runApp()
shiny::runApp()
?dbeta
runApp()
runApp()
runApp()
runApp()
View(pminXParam)
View(pmaxXParam)
str(denAmostraTheta)
denAmostraTheta$y
maxYParam
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
curve(dbeta(x,364981,134520),from=0.32,to=0.80,add=FALSE,lwd=2,col="red")
runApp()
?curve
curve(dbeta(x,364981,134520),from=0.32,to=0.80,add=FALSE,lwd=2,col="red")
runApp()
curve(dbeta(x,364981,134520),from=0.32,to=0.80,add=FALSE,lwd=2,col="red")
runApp()
view( max(denAmostraTheta$y))
View( max(denAmostraTheta$y))
dbeta(alphaTeorica/(alphaTeorica+betaTeorica),alphaTeorica,betaTeorica)
pmaxXParam
alphaTeorica/(alphaTeorica+betaTeorica)
dbeta(alphaTeorica/(alphaTeorica+betaTeorica),alphaTeorica,betaTeorica)
max(denAmostraTheta$y)
curve(dbeta(x,alphaTeorica,betaTeorica),add=TRUE,lwd=2,col="red")
curve(dbeta(x,alphaTeorica,betaTeorica),lwd=2,col="green")
curve(dbeta(x,alphaTeorica,betaTeorica),lwd=2,col="green",n=500)
curve(dbeta(x,alphaTeorica,betaTeorica),lwd=2,col="green",n=50000)
runApp()
runApp()
runApp()
runApp()
runApp()
curve(dbeta(x,364981,134520),from=0.32,to=0.80,add=FALSE,lwd=2,col="red",n=50000)
shiny::runApp()
shiny::runApp()
